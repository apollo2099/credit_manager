<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MenuMapper">

	<resultMap type="Menu" id="menuResultMap">
		<id column="menu_id" property="menuId" />
		<result column="menu_name" property="menuName" />
		<result column="menu_url" property="menuUrl" />
		<result column="parent_id" property="parentId" />
		<result column="menu_order" property="menuOrder" />
		<result column="menu_icon" property="menuIcon" />
		<result column="menu_type" property="menuType" />
	</resultMap>

	<!-- ztree -->
	<!-- <resultMap type="Menu" id="menuZtreeResultMap">
		<id column="menu_id" property="menuId" />
		<result column="menu_name" property="menuName" />
		<result column="menu_url" property="menuUrl" />
		<result column="parent_id" property="parentId" />
		<result column="menu_order" property="menuOrder" />
		<result column="menu_icon" property="menuIcon" />
		<result column="menu_type" property="menuType" />
		<result column="target" property="target"></result>
	</resultMap> -->
	
	<!-- <resultMap type="Button" id="buttonResultMap">
		<id column="button_id" property="buttonId" />
		<result column="button_name" property="buttonName" />
		<result column="button_url" property="buttonUrl" />
		<result column="status" property="status" />
	</resultMap> -->
	
	<!-- yang -->
	<select id="MenuMapper.findParentMenusByUserId" parameterType="Integer" resultType="Menu">
		select distinct m.*
		from sys_user_role ur, sys_role_resource rs, sys_menu m
		where ur.role_id= rs.role_id
		and rs.resource_id = m.menu_id
		and rs.resource_type = 1
		and m.status != -1
 		<if test="_parameter != 1"><!--only for non-admin user -->
			and ur.user_id = #{userId}
 		</if>
 		order by m.menu_order
	</select>

<!-- yang -->
	<select id="MenuMapper.findMenusByUserIdAndParent" resultType="Menu">
		select distinct m.*
		from sys_user_role ur, sys_role_resource rs, sys_menu m
		where ur.role_id = rs.role_id
		and rs.resource_id = m.menu_id
		and rs.resource_type = 2<!-- 菜单资源 -->
		and m.parent_id = #{menuId}
		and m.status != -1
		<if test="userId != 1"><!-- only for non-admin user -->
			and ur.user_id = #{userId}
		</if>
		order by m.menu_order
	</select><!-- TODO:排除掉admin用户 -->
	
	<select id="count" parameterType="PageData" resultType="int">
		select count(1)
		from sys_menu m
		where m.status != -1
		<if test="menuType != null">
	  	and	m.menu_type = #{menuType}
		</if>
		<if test="parentId != null">
	  	and	m.parent_id = #{parentId}
		</if>
		<if test="keyword != null and keyword != ''">
	  	and	CONCAT(IFNULL(m.menu_name,''),IFNULL(m.menu_url,'')) like #{keyword}
		</if>
	</select>
	
	<select id="list" parameterType="PageData" resultType="PageData">
		select  m.menu_id menuId,
				m.menu_name menuName,
				m.menu_url menuUrl,
				m.parent_id parentId,
				m.menu_order menuOrder,
				m.menu_type menuType,
				m.removable,
				m.description,
				m.status
		from sys_menu m
		where m.status != -1
		<if test="menuType != null">
	  	and	m.menu_type = #{menuType}
		</if>
		<if test="parentId != null">
	  	and	m.parent_id = #{parentId}
		</if>
		<if test="keyword != null and keyword != ''">
	  	and	CONCAT(IFNULL(m.menu_name,''),IFNULL(m.menu_url,'')) like #{keyword}
		</if>
		limit #{from},#{size}
	</select>
	
	<select id="listBy" parameterType="PageData" resultType="PageData">
		select  m.menu_id menuId,
				m.menu_name menuName,
				m.menu_url menuUrl,
				m.parent_id parentId,
				m.menu_order menuOrder,
				m.menu_type menuType,
				m.removable,
				m.description,
				m.status
		from sys_menu m
		where m.status != -1
		<if test="menuType != null">
	  	and	m.menu_type = #{menuType}
		</if>
		<if test="parentId != null">
	  	and	m.parent_id = #{parentId}
		</if>
	</select>
	
	<insert id="add" parameterType="PageData">
		insert into sys_menu (
			menu_name,
			menu_url,
			parent_id,
			menu_order,
			menu_type,
			removable,
			description,
			status
		) values (
			#{menuName},
			#{menuUrl},
			#{parentId},
			#{menuOrder},
			#{menuType},
			#{removable},
			#{description},
			#{status}
		)
	</insert>
	
	<select id="getById" parameterType="Integer" resultType="PageData">
		select
			menu_id menuId,
			menu_name menuName,
			menu_url menuUrl,
			parent_id parentId,
			menu_order menuOrder,
			menu_type menuType,
			removable,
			description,
			status
		from sys_menu 
		where status != -1
		and menu_id = #{menuId}
	</select>
	
	<select id="getMenuById" parameterType="Integer" resultType="Menu">
		select * from sys_menu 
		where status != -1
		and menu_id = #{menuId}
	</select>
	
	<select id="getByPath" parameterType="String" resultType="Menu">
		select * from sys_menu 
		where status != -1
		and menu_url = #{url}
	</select>
	
	<update id="edit" parameterType="PageData">
		update sys_menu set
			menu_name	= #{menuName},
			menu_url	= #{menuUrl},
			menu_order	= #{menuOrder},
			removable	= #{removable},
			description	= #{description}
		where
			menu_id		= #{menuId}
	</update>
	
	<update id="delete" parameterType="Integer" >
		update sys_menu set
			status	= -1
		where 1=1 
		and removable=1 
		   and	
			menu_id	= #{menuId}
	</update>
	
	<update id="batchDelete" parameterType="java.util.List">
		update sys_menu set
			status	= -1
		where 1=1 
		and removable=1 
		   and	
			menu_id	in
		<foreach collection="list" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>
	</update>
	
</mapper>